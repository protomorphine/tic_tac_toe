<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__field_8h_source" xml:lang="en-US">
<title>Field.h</title>
<indexterm><primary>src/Field.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
4 
5 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="__field_8h_1acdf9f5f8475011819f8902fb76141d4e">AddedResult</link>&#32;{
6 &#32;&#32;&#32;&#32;<link linkend="__field_8h_1acdf9f5f8475011819f8902fb76141d4ead0749aaba8b833466dfcbb0428e4f89c">SUCCESS</link>,
7 &#32;&#32;&#32;&#32;<link linkend="__field_8h_1acdf9f5f8475011819f8902fb76141d4eac2759effffc94bb9acc71d69fe3e8a1f">FAIL</link>
8 };
9 
13 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_field">Field</link>
14 {
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;add(<emphasis role="keywordtype">char</emphasis>&#32;ch,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y);
22 
26 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;size_;
27 &#32;
31 &#32;&#32;&#32;&#32;std::vector&lt;std::vector&lt;char&gt;&gt;&#32;field_;
32 
33 <emphasis role="keyword">public</emphasis>:
34 &#32;
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_1a92b3c227cc41ab9d8c78c8d53d44f6e1">is_someone_win</link>()&#32;<emphasis role="keyword">const</emphasis>;
36 &#32;
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_field">Field</link>(<emphasis role="keywordtype">int</emphasis>&#32;width);
42 
48 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_1ad8c94c96a637ac0d1158e10b6c056a39">add_x</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;add(<emphasis role="charliteral">&apos;X&apos;</emphasis>,&#32;x,&#32;y);}
49 
55 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_1abb2e853f82674f1f6642f6e7835c3601">add_0</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;y){&#32;<emphasis role="keywordflow">return</emphasis>&#32;add(<emphasis role="charliteral">&apos;0&apos;</emphasis>,&#32;x,&#32;y);&#32;}
56 &#32;&#32;&#32;&#32;
61 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_field_1aaefa48cbe5edc5152960e184be7453cf">to_string</link>()&#32;<emphasis role="keyword">const</emphasis>;
62 };
</programlisting></section>
